// <auto-generated />
using System;
using MDGeneralLedger.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MDGeneralLedger.Migrations
{
    [DbContext(typeof(GeneralLedgerDB))]
    partial class GeneralLedgerDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationSchema", b =>
                {
                    b.Property<string>("SchemaId")
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParentSchemaId")
                        .HasColumnType("varchar(15)");

                    b.HasKey("SchemaId");

                    b.HasIndex("ParentSchemaId");

                    b.ToTable("AcctDim");

                    b.HasDiscriminator<string>("SchemaId");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParentId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SchemaId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.HasIndex("ParentId");

                    b.ToTable("AcctDimValue");

                    b.HasDiscriminator<string>("SchemaId").HasValue("ClassificationValue");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MDGeneralLedger.Models.GlAccount", b =>
                {
                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OUId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ResidencyId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenureId")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Account");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OUId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ResidencyId");

                    b.HasIndex("TenureId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.PostingEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("Date");

                    b.Property<decimal>("Credit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CurrencyID")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Debit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FCredit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FDebit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GLAccountAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JournalID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("GLAccountAccount");

                    b.ToTable("PostingEntry");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.AccounbtingCategory>", b =>
                {
                    b.HasBaseType("MDGeneralLedger.Models.ClassificationValue");

                    b.HasDiscriminator().HasValue("ClassificationValue<AccounbtingCategory>");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Currency>", b =>
                {
                    b.HasBaseType("MDGeneralLedger.Models.ClassificationValue");

                    b.HasDiscriminator().HasValue("ClassificationValue<Currency>");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.OrganizationUnit>", b =>
                {
                    b.HasBaseType("MDGeneralLedger.Models.ClassificationValue");

                    b.HasDiscriminator().HasValue("ClassificationValue<OrganizationUnit>");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Product>", b =>
                {
                    b.HasBaseType("MDGeneralLedger.Models.ClassificationValue");

                    b.HasDiscriminator().HasValue("ClassificationValue<Product>");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Residency>", b =>
                {
                    b.HasBaseType("MDGeneralLedger.Models.ClassificationValue");

                    b.HasDiscriminator().HasValue("ClassificationValue<Residency>");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Tenure>", b =>
                {
                    b.HasBaseType("MDGeneralLedger.Models.ClassificationValue");

                    b.HasDiscriminator().HasValue("ClassificationValue<Tenure>");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationSchema", b =>
                {
                    b.HasOne("MDGeneralLedger.Models.ClassificationSchema", "ParentSchema")
                        .WithMany()
                        .HasForeignKey("ParentSchemaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentSchema");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.ClassificationValue", b =>
                {
                    b.HasOne("MDGeneralLedger.Models.ClassificationValue", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.GlAccount", b =>
                {
                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.AccounbtingCategory>", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Currency>", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.OrganizationUnit>", "OU")
                        .WithMany()
                        .HasForeignKey("OUId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Product>", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Residency>", "Residency")
                        .WithMany()
                        .HasForeignKey("ResidencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Tenure>", "Tenure")
                        .WithMany()
                        .HasForeignKey("TenureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Currency");

                    b.Navigation("OU");

                    b.Navigation("Product");

                    b.Navigation("Residency");

                    b.Navigation("Tenure");
                });

            modelBuilder.Entity("MDGeneralLedger.Models.PostingEntry", b =>
                {
                    b.HasOne("MDGeneralLedger.Models.ClassificationValue<MDGeneralLedger.Models.Currency>", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MDGeneralLedger.Models.GlAccount", "GLAccount")
                        .WithMany()
                        .HasForeignKey("GLAccountAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("GLAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
